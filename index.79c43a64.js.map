{"mappings":"ACGA,IAAM,EAAO,SAAS,IAAI,CAEpB,EAAmB,SAAC,CAA1B,EAAmC,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAC3B,EAAM,SAAS,aAAa,CAAC,MAEnC,CAAA,EAAI,SAAS,CAAG,EAAU,QAAU,UACpC,EAAI,YAAY,CAAC,UAAW,gBAC5B,EAAI,WAAW,CAAG,EAClB,EAAK,WAAW,CAAC,EACnB,EA8DA,CA5DiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,IAAM,EAAW,WACf,WAAM,OAAA,EAAO,AAAI,MAAM,8BACvB,EAAA,KAGI,EAAc,WAClB,aAAa,GACb,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,EACxC,EAEA,SAAS,gBAAgB,CAAC,QAAS,EACrC,GAEiB,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAM,EAA4B,SAAC,CAAnC,EACE,EAAQ,GACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,EAC9C,EAEM,EAAkB,WACtB,OAAA,EAA0B,8B,EACtB,EAAmB,SAAC,CAA1B,EACE,EAAE,cAAc,GAChB,EAA0B,8BAC5B,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAEiB,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAI,EAAY,CAAA,EACZ,EAAa,CAAA,EAEX,EAAkB,WAClB,GAAa,IACf,EAAQ,8BACR,SAAS,mBAAmB,CAAC,QAAS,GACtC,SAAS,mBAAmB,CAAC,cAAe,GAEhD,EAEM,EAAkB,WACtB,EAAY,CAAA,EACZ,GACF,EAEM,EAAmB,SAAC,CAA1B,EACE,EAAE,cAAc,GAChB,EAAa,CAAA,EACb,GACF,EAEA,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAE8B,CAAC,OAAO,CAAC,SAAC,CAAV,EAC5B,OAAA,EACG,IAAI,CAAC,SAAC,CADT,EACqB,OAAA,EAAiB,EACnC,GAAA,KAAK,CAAC,SAAC,CAAP,EAAiB,OAAA,EAAiB,EAAM,OAAO,CAAE,CAAA,E,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ \"use strict\";\nvar body = document.body;\nvar showNotification = function(message) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var div = document.createElement(\"div\");\n    div.className = isError ? \"error\" : \"success\";\n    div.setAttribute(\"data-qa\", \"notification\");\n    div.textContent = message;\n    body.appendChild(div);\n};\nvar promise1 = new Promise(function(resolve, reject) {\n    var rejectId = setTimeout(function() {\n        return reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n    var handleClick = function() {\n        clearTimeout(rejectId);\n        resolve(\"First promise was resolved\");\n        document.removeEventListener(\"click\", handleClick);\n    };\n    document.addEventListener(\"click\", handleClick);\n});\nvar promise2 = new Promise(function(resolve) {\n    var resolveAndRemoveListeners = function(message) {\n        resolve(message);\n        document.removeEventListener(\"click\", handleLeftClick);\n        document.removeEventListener(\"contextmenu\", handleRightClick);\n    };\n    var handleLeftClick = function() {\n        return resolveAndRemoveListeners(\"Second promise was resolved\");\n    };\n    var handleRightClick = function(e) {\n        e.preventDefault();\n        resolveAndRemoveListeners(\"Second promise was resolved\");\n    };\n    document.addEventListener(\"click\", handleLeftClick);\n    document.addEventListener(\"contextmenu\", handleRightClick);\n});\nvar promise3 = new Promise(function(resolve) {\n    var leftClick = false;\n    var rightClick = false;\n    var checkBothClicks = function() {\n        if (leftClick && rightClick) {\n            resolve(\"Third promise was resolved\");\n            document.removeEventListener(\"click\", handleLeftClick);\n            document.removeEventListener(\"contextmenu\", handleRightClick);\n        }\n    };\n    var handleLeftClick = function() {\n        leftClick = true;\n        checkBothClicks();\n    };\n    var handleRightClick = function(e) {\n        e.preventDefault();\n        rightClick = true;\n        checkBothClicks();\n    };\n    document.addEventListener(\"click\", handleLeftClick);\n    document.addEventListener(\"contextmenu\", handleRightClick);\n});\n[\n    promise1,\n    promise2,\n    promise3\n].forEach(function(promise) {\n    return promise.then(function(message) {\n        return showNotification(message);\n    }).catch(function(error) {\n        return showNotification(error.message, true);\n    });\n});\n\n//# sourceMappingURL=index.79c43a64.js.map\n","/* eslint-disable function-paren-newline */\n'use strict';\n\nconst body = document.body;\n\nconst showNotification = (message, isError = false) => {\n  const div = document.createElement('div');\n\n  div.className = isError ? 'error' : 'success';\n  div.setAttribute('data-qa', 'notification');\n  div.textContent = message;\n  body.appendChild(div);\n};\n\nconst promise1 = new Promise((resolve, reject) => {\n  const rejectId = setTimeout(\n    () => reject(new Error('First promise was rejected')),\n    3000,\n  );\n\n  const handleClick = () => {\n    clearTimeout(rejectId);\n    resolve('First promise was resolved');\n    document.removeEventListener('click', handleClick);\n  };\n\n  document.addEventListener('click', handleClick);\n});\n\nconst promise2 = new Promise((resolve) => {\n  const resolveAndRemoveListeners = (message) => {\n    resolve(message);\n    document.removeEventListener('click', handleLeftClick);\n    document.removeEventListener('contextmenu', handleRightClick);\n  };\n\n  const handleLeftClick = () =>\n    resolveAndRemoveListeners('Second promise was resolved');\n  const handleRightClick = (e) => {\n    e.preventDefault();\n    resolveAndRemoveListeners('Second promise was resolved');\n  };\n\n  document.addEventListener('click', handleLeftClick);\n  document.addEventListener('contextmenu', handleRightClick);\n});\n\nconst promise3 = new Promise((resolve) => {\n  let leftClick = false;\n  let rightClick = false;\n\n  const checkBothClicks = () => {\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n      document.removeEventListener('click', handleLeftClick);\n      document.removeEventListener('contextmenu', handleRightClick);\n    }\n  };\n\n  const handleLeftClick = () => {\n    leftClick = true;\n    checkBothClicks();\n  };\n\n  const handleRightClick = (e) => {\n    e.preventDefault();\n    rightClick = true;\n    checkBothClicks();\n  };\n\n  document.addEventListener('click', handleLeftClick);\n  document.addEventListener('contextmenu', handleRightClick);\n});\n\n[promise1, promise2, promise3].forEach((promise) =>\n  promise\n    .then((message) => showNotification(message))\n    .catch((error) => showNotification(error.message, true)),\n);\n"],"names":["body","document","showNotification","message","isError","arguments","length","div","createElement","className","setAttribute","textContent","appendChild","Promise","resolve","reject","rejectId","setTimeout","Error","handleClick","clearTimeout","removeEventListener","addEventListener","resolveAndRemoveListeners","handleLeftClick","handleRightClick","e","preventDefault","leftClick","rightClick","checkBothClicks","forEach","promise","then","catch","error"],"version":3,"file":"index.79c43a64.js.map"}